generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String      @id  @map("_id")
  username             String      @unique
  name                 String
  image                String?
  bio                  String?
  threads              Thread[]
  onboarded            Boolean     @default(false)
  communities          Community[] @relation("CommunityMembers",fields: [communitiesId], references: [id])
  communitiesId        String[]
  communitiesCreatedBy Community[] @relation("CreatedBy")
  likes          Like[] 
}

model Thread {
  id          String     @id @default(cuid()) @map("_id")
  text        String
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  community   Community? @relation(fields: [communityId], references: [id])
  communityId String?
  createdAt   DateTime   @default(now())
  parent      Thread?    @relation("Children", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId    String? 
  children    Thread[]   @relation("Children")
  childComments   Thread[] @relation("Replies")
  parentComment   Thread?  @relation("Replies", fields: [parentCommentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentCommentId String?
  likes          Like[] 

}

model Community {
  id          String   @id @default(cuid()) @map("_id")
  username    String   @unique
  name        String
  image       String?
  bio         String?
  createdBy   User     @relation(name: "CreatedBy", fields: [createdById], references: [id])
  createdById String
  threads     Thread[]
  members     User[]     @relation(name: "CommunityMembers", fields: [membersId], references: [id])
  membersId   String[]
  
}


model Like {
  id       String   @id @default(cuid()) @map("_id")
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  thread   Thread   @relation(fields: [threadId], references: [id])
  threadId String
  createdAt DateTime @default(now())
}
